# file: .github/workflows/ci.yml
# version: 1.0.0
# guid: a1b2c3d4-e5f6-7890-abcd-ef1234567890

name: Continuous Integration

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    RUST_VERSION: "stable"
    RUSTFLAGS: "-D warnings"

permissions:
    contents: read
    checks: write

jobs:
    # Detect what files changed to optimize workflow execution
    detect-changes:
        name: Detect Changes
        runs-on: ubuntu-latest
        outputs:
            rustfiles: ${{ steps.filter.outputs.rustfiles }}
            docsfiles: ${{ steps.filter.outputs.docsfiles }}
            workflowfiles: ${{ steps.filter.outputs.workflowfiles }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Check file changes
              uses: dorny/paths-filter@v3
              id: filter
              with:
                  filters: |
                      rustfiles:
                        - '**/*.rs'
                        - 'Cargo.toml'
                        - 'Cargo.lock'
                      docsfiles:
                        - '**/*.md'
                        - 'docs/**'
                      workflowfiles:
                        - '.github/workflows/**'

    # Rust linting, formatting, and testing
    test-rust:
        name: Test Rust
        runs-on: ubuntu-latest
        needs: [detect-changes]
        if: needs.detect-changes.outputs.rustfiles == 'true' || needs.detect-changes.outputs.workflowfiles == 'true'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  toolchain: ${{ env.RUST_VERSION }}
                  components: rustfmt, clippy

            - name: Cache Rust dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/Cargo.toml') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-
                      ${{ runner.os }}-cargo-

            - name: Check formatting
              run: cargo fmt -- --check

            - name: Run clippy
              run: cargo clippy --all-targets --all-features -- -D warnings

            - name: Build
              run: cargo build --verbose

            - name: Run tests
              run: cargo test --verbose

            - name: Build release
              run: cargo build --release --verbose

    # Lint markdown documentation
    lint-docs:
        name: Lint Documentation
        runs-on: ubuntu-latest
        needs: [detect-changes]
        if: needs.detect-changes.outputs.docsfiles == 'true' || needs.detect-changes.outputs.workflowfiles == 'true'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Lint markdown
              uses: DavidAnson/markdownlint-cli2-action@v18
              with:
                  globs: "**/*.md"

    # Summary of all checks
    ci-summary:
        name: CI Summary
        runs-on: ubuntu-latest
        needs: [test-rust, lint-docs]
        if: always()

        steps:
            - name: Generate summary
              run: |
                  echo "# CI Summary" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
                  echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
                  echo "| Test Rust | ${{ needs.test-rust.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Lint Docs | ${{ needs.lint-docs.result }} |" >> $GITHUB_STEP_SUMMARY

            - name: Check for failures
              if: needs.test-rust.result == 'failure' || needs.lint-docs.result == 'failure'
              run: |
                  echo "‚ùå One or more jobs failed"
                  exit 1
